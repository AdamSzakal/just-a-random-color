{"version":3,"sources":["node_modules/color-name/index.js","node_modules/color-convert/conversions.js","node_modules/color-convert/route.js","node_modules/color-convert/index.js","index.js"],"names":["cssKeywords","require","reverseKeywords","Object","keys","key","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","module","exports","model","Error","length","defineProperty","value","comparativeDistance","x","y","r","h","g","b","min","Math","max","delta","l","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestDistance","currentClosestKeyword","Infinity","distance","z","t2","t3","val","t1","i","smin","lmin","hi","floor","f","p","q","t","sl","vmin","wh","bl","ratio","n","m","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","args","saturation","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","parseInt","hue","chroma","pure","mg","w","conversions","buildGraph","graph","models","len","parent","deriveBFS","fromModel","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","toModel","path","fn","cur","conversion","route","wrapRaw","wrappedFn","arg0","wrapRounded","result","forEach","routes","raw","body","document","querySelector","codeContainer","random","lightness","bgHSL","bgRGB","bgHex","console","log","style","backgroundColor","innerHTML"],"mappings":"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","file":"just-a-random-color.30fa915d.js","sourceRoot":"..","sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const convert = require('color-convert');\n\n// setup\nconst body = document.querySelector(\"body\");\nconst codeContainer = document.querySelector(\"code\");\nconst hue = Math.floor( Math.random()*360);\nconst saturation = 70;\nconst lightness = 55;\nconst bgHSL = [hue, saturation, lightness];\n\n// get bg color\nconst bgRGB = convert.hsl.rgb(hue, saturation, lightness);\nconst bgHex = convert.hsl.hex(hue, saturation, lightness);\nconsole.log(bgRGB);\nconsole.log(bgHex);\n\n// set bg color\nbody.style.backgroundColor = \"#\" + bgHex;\n\n// print bg color codes\ncodeContainer.innerHTML += \"#\" + bgHex + \"<br>\" + \"RGB(\" + bgRGB + \")\" + \"<br>\" + \"HSL(\" + bgHSL + \")\";\n"]}